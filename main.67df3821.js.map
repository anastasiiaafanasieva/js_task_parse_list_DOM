{"version":3,"sources":["scripts/main.js"],"names":["Employee","employeeName","position","salary","age","name","getEmployees","list","nodeListofLi","arrayOfEmployees","document","querySelectorAll","value","salaryNumber","dataset","split","join","replace","push","innerText","sortList","sort","a","b","querySelector","remove","insertAdjacentHTML","ulSelect","employee"],"mappings":";AAAA,aA0DA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAxDMA,IAAAA,EACJ,SAAYC,EAAAA,EAAcC,EAAUC,EAAQC,GAAK,EAAA,KAAA,GAC1CC,KAAAA,KAAOJ,EACPC,KAAAA,SAAWA,EACXC,KAAAA,OAASA,EACTC,KAAAA,IAAMA,GAIf,SAASE,EAAaC,GACdC,IADoB,EAEpBC,EAAmB,GAELD,EAAAA,EAHCE,SAASC,iBAAiBJ,IADrB,IAIQ,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAvBK,IAAAA,EAAuB,EAAA,MAC1BC,EAAeD,EAAME,QAAQX,OAAOY,MAAM,KAAKC,KAAK,IACvDC,QAAQ,IAAK,IAEhBR,EAAiBS,KAAK,IAAIlB,EAASY,EAAMO,UAAWP,EAAME,QAAQZ,SAChEW,EAAcD,EAAME,QAAQV,OATN,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAYnBK,OAAAA,EAGT,SAASW,EAASb,GACVE,IAAAA,EAAmBH,EAAaC,GAEtCE,EAAiBY,KAAK,SAACC,EAAGC,GAAMA,OAAAA,EAAEpB,OAASmB,EAAEnB,SAElCO,SAASc,cAAc,MAE/BC,SAEQf,SAASc,cAAc,MAE/BE,mBAAmB,WAAtB,6BAKMC,IAhBgB,EAgBhBA,EAAWjB,SAASc,cAAc,MAEjBf,EAAAA,EAAAA,GAlBD,IAkBmB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAA9BmB,IAAAA,EAA8B,EAAA,MACvCD,EAASD,mBAAmB,YAERE,oCAAAA,OAAAA,EAAS1B,SACX0B,0BAAAA,OAAAA,EAASzB,OACZyB,uBAAAA,OAAAA,EAASxB,IAElBwB,uBAAAA,OAAAA,EAASvB,KANf,yBAnBoB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KA+BxBe,EAAS,MACTd,EAAa","file":"main.67df3821.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nclass Employee {\n  constructor(employeeName, position, salary, age) {\n    this.name = employeeName;\n    this.position = position;\n    this.salary = salary;\n    this.age = age;\n  }\n}\n\nfunction getEmployees(list) {\n  const nodeListofLi = document.querySelectorAll(list);\n  const arrayOfEmployees = [];\n\n  for (const value of nodeListofLi) {\n    const salaryNumber = value.dataset.salary.split(',').join('')\n      .replace('$', '');\n\n    arrayOfEmployees.push(new Employee(value.innerText, value.dataset.position,\n      salaryNumber, value.dataset.age));\n  }\n\n  return arrayOfEmployees;\n}\n\nfunction sortList(list) {\n  const arrayOfEmployees = getEmployees(list);\n\n  arrayOfEmployees.sort((a, b) => b.salary - a.salary);\n\n  const ul = document.querySelector('ul');\n\n  ul.remove();\n\n  const h1 = document.querySelector('h1');\n\n  h1.insertAdjacentHTML('afterend', `\n    <ul>\n    </ul>\n  `);\n\n  const ulSelect = document.querySelector('ul');\n\n  for (const employee of arrayOfEmployees) {\n    ulSelect.insertAdjacentHTML('beforeend', `\n    <li\n        data-position=${employee.position}\n        data-salary=${employee.salary}\n        data-age=${employee.age}\n      >\n        ${employee.name}\n      </li>\n    `);\n  }\n}\n\nsortList('li');\ngetEmployees('li');\n"]}